version: "3.8"

x-app_environment: &app_environment
  environment:
    - DEBUG
    - SECRET_KEY
    - POSTGRES_PASSWORD
    - POSTGRES_HOST
    - POSTGRES_PORT
    - POSTGRES_NAME
    - POSTGRES_USER
    - SITE_HOST
    - YND_ACCESS_KEY_ID
    - YND_SECRET_ACCESS_KEY
    - YND_STORAGE_BUCKET_NAME
    - EMAIL_HOST_USER
    - EMAIL_HOST_PASSWORD

services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend/:/app/:cached
    restart: unless-stopped
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    ports:
      - 8000:8000
    <<: *app_environment

  db:
    build:
      context: ./db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
    restart: unless-stopped
    ports:
      - 15239:5432

  nginx:
    volumes:
      - nginx_cache:/var/lib/nginx/proxy_cache
      - static:/var/www/static/:ro
      - acme.sh:/acme.sh:delegated
      - certs:/etc/nginx/certs
    build:
      context: ./nginx
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    environment:
      - TLS_MODE
      - HTPASSWD_NODE
      - HTPASSWD

  redis:
    image: redis:6.2-alpine
    volumes:
      - redisdata:/data

  celery:
    build:
      context: ./backend
    restart: unless-stopped
    command: celery -A config worker -l info -c 1 -n celery@dats.com -Q celery
    depends_on:
      - db
      - redis
    <<: *app_environment

#  frontend:
#    build:
#      context: ./frontend
#    restart: unless-stopped
#    command: sh -c "npm run dev"
#    depends_on:
#      - backend
#    ports:
#      - 3000:3000

volumes:
  postgresdata:
  nginx_cache:
  static:
  acme.sh:
  certs:
  redisdata: